/*
 * Wolontariusz API
 * This is a simple API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.73
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from './ApiClient';
import Comment from './model/Comment';
import Error from './model/Error';
import Event from './model/Event';
import EventForOrg from './model/EventForOrg';
import EventidTopicsBody from './model/EventidTopicsBody';
import EventidUsersBody from './model/EventidUsersBody';
import InlineResponse200 from './model/InlineResponse200';
import InlineResponse2001 from './model/InlineResponse2001';
import InlineResponse2002 from './model/InlineResponse2002';
import Location from './model/Location';
import OrgParticipant from './model/OrgParticipant';
import Organisation from './model/Organisation';
import Task from './model/Task';
import Topic from './model/Topic';
import User from './model/User';
import UserMin from './model/UserMin';
import UserMinimal from './model/UserMinimal';
import Volounteers from './model/Volounteers';
import DefaultApi from './api/DefaultApi';

/**
* This_is_a_simple_API.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var WolontariuszApi = require('index'); // See note below*.
* var xxxSvc = new WolontariuszApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new WolontariuszApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new WolontariuszApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new WolontariuszApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Comment model constructor.
     * @property {module:model/Comment}
     */
    Comment,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The Event model constructor.
     * @property {module:model/Event}
     */
    Event,

    /**
     * The EventForOrg model constructor.
     * @property {module:model/EventForOrg}
     */
    EventForOrg,

    /**
     * The EventidTopicsBody model constructor.
     * @property {module:model/EventidTopicsBody}
     */
    EventidTopicsBody,

    /**
     * The EventidUsersBody model constructor.
     * @property {module:model/EventidUsersBody}
     */
    EventidUsersBody,

    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200,

    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001,

    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The OrgParticipant model constructor.
     * @property {module:model/OrgParticipant}
     */
    OrgParticipant,

    /**
     * The Organisation model constructor.
     * @property {module:model/Organisation}
     */
    Organisation,

    /**
     * The Task model constructor.
     * @property {module:model/Task}
     */
    Task,

    /**
     * The Topic model constructor.
     * @property {module:model/Topic}
     */
    Topic,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserMin model constructor.
     * @property {module:model/UserMin}
     */
    UserMin,

    /**
     * The UserMinimal model constructor.
     * @property {module:model/UserMinimal}
     */
    UserMinimal,

    /**
     * The Volounteers model constructor.
     * @property {module:model/Volounteers}
     */
    Volounteers,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
