map $http_origin $cors_origin {
    default "";
    "https://auth.<domain_host>" $http_origin;
    "https://api.<domain_host>" $http_origin;
    "https://adm.<domain_host>" $http_origin;
    "https://org.<domain_host>" $http_origin;
}

upstream public_api {
    server ory-kratos:4433;
}

upstream admin_api {
    server ory-kratos:4434;
}

upstream selfservice_ui {
    server ory-kratos-selfservice-ui:3000;
}

upstream wolontariusz_app_api {
    server backend:3000;
}

server {
    listen 80;
    server_name *.<domain_host> <domain_host>;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name <domain_host>;

    ssl_certificate     /etc/nginx/ssl/wolontariusz.app.cer;
    ssl_certificate_key /etc/nginx/ssl/wolontariusz.app.key;

    return 301 https://kolejnepodejscie.my.canva.site/;
    # root /var/www/html;
    # index index.html;
    #
    # location / {
    #     try_files $uri $uri/ =404;
    # }
}

server {
    listen 443 ssl;
    server_name auth.<domain_host>;

    ssl_certificate     /etc/nginx/ssl/wolontariusz.app.cer;
    ssl_certificate_key /etc/nginx/ssl/wolontariusz.app.key;

    add_header 'Access-Control-Allow-Origin' "$cors_origin" always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type' always;

    location / {
        proxy_pass http://public_api;
        proxy_redirect          off;
        proxy_set_header        Host            $host;
        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # location /admin {
    #     # Example of managing access control
    #     # for the /admin endpoint
    #     # in that example we allow access
    #     # either from the subnet
    #     # or by checking query parameter ?secret=
    #     set $allow 0;
    #     # Check against remote address
    #     if ($remote_addr ~* "172.24.0.*") {
    #             set $allow 1;
    #     }
    #     # Check against ?secret param
    #     if ($arg_secret = "GuQ8alL2") {
    #             set $allow 1;
    #     }
    #     if ($allow = 0) {
    #             return 403;
    #     }
    #
    #     rewrite /admin/(.*) /$1  break;
    #
    #     proxy_pass http://admin_api;
    #     proxy_redirect          off;
    #     proxy_set_header        Host            $host;
    #     proxy_set_header        X-Real-IP       $remote_addr;
    #     proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    # }

    location /identities {
        proxy_pass http://admin_api;
        proxy_redirect          off;
        proxy_set_header        Host            $host;
        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /_ {
        rewrite /_/(.*) /$1  break;

        proxy_pass http://selfservice_ui;
        proxy_redirect          off;
        proxy_set_header        Host            $host;
        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    error_page 401 = @error401;
    location @error401 {
        return 302 https://auth.<domain_host>/_/login;
    }
}

server {
    listen 443 ssl;
    server_name adm.<domain_host>;

    ssl_certificate     /etc/nginx/ssl/wolontariusz.app.cer;
    ssl_certificate_key /etc/nginx/ssl/wolontariusz.app.key;

    add_header 'Access-Control-Allow-Origin' "$cors_origin" always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type' always;

    root /var/www-adm;
    index index.html;

    location / {
        try_files $uri /index.html;
    }
}

# server {
#     listen 443 ssl;
#     server_name org.<domain_host>;
#
#     ssl_certificate     /etc/nginx/ssl/wolontariusz.app.cer;
#     ssl_certificate_key /etc/nginx/ssl/wolontariusz.app.key;
#
#     add_header 'Access-Control-Allow-Origin' "$cors_origin" always;
#     add_header 'Access-Control-Allow-Credentials' 'true' always;
#     add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
#     add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type' always;
#
#     root /var/www-org;
#     index index.html;
#
#     location / {
#         try_files $uri /index.html;
#     }
# }

server {
    listen 443 ssl;
    server_name api.<domain_host>;

    ssl_certificate     /etc/nginx/ssl/wolontariusz.app.cer;
    ssl_certificate_key /etc/nginx/ssl/wolontariusz.app.key;

    add_header 'Access-Control-Allow-Origin' "$cors_origin" always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type' always;

    location / {
        proxy_pass http://wolontariusz_app_api;
        proxy_redirect          off;
        proxy_set_header        Host            $host;
        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
